--i
-=
!=
*=
/=
&&
&=
#define
#include
#pragma
%=
^=
++i
+=
<<
<<=
<=
<iostream>
<map>
<string>
<vector>
==
>=
>>
>>=
|=
||
alignas
alignof
and
and_eq
asm
atomic_cancel
atomic_commit
atomic_noexcept
auto
bitand
bitor
bool
break
case
catch
char
char16_t
char32_t
char8_t
class
co_await
co_return
co_yield
compl
concept
const
const_cast
consteval
constexpr
constinit
continue
decltype
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
final
float
for
friend
goto
i--
i++
if
import
inline
int
long
module
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
override
private
protected
public
reflexpr
register
reinterpret_cast
requires
return
short
signed
sizeof
sizeof(long long)
static
static_assert
static_cast
std::cout
std::endl
std::map
std::move
std::string
std::vector
struct
switch
synchronized
template
template<class T>
template<typename T>
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while
xor
xor_eq